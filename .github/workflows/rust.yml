name: Rust Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test on ${{ matrix.os }} with Rust ${{ matrix.rust_toolchain }} and features ${{ matrix.features || 'default' }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false # Allows other jobs in the matrix to continue if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust_toolchain: [stable]
        features:
          - default # Or empty string if you want to explicitly run without any features
          - none
          - "feature_b"
          - "feature_a,feature_b" # Combine features

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run tests with specified features
        # Conditionally add --features flag if features is not 'default' or empty
        run: |
          if [ "${{ matrix.features }}" = "default" ]; then
            cargo test --workspace --verbose
          elif [ "${{ matrix.features }}" = "none" ]; then
            cargo test --workspace --verbose --no-default-features
          else
            cargo test --workspace --verbose --features "${{ matrix.features }}"
          fi
        shell: bash
